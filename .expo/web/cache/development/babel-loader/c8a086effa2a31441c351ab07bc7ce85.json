{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport getNews from \"../api/GetNews\";\nimport HomeTitle from \"../components/HomeTitle\";\nimport NewsCard from \"../components/NewsCard\";\nimport getData from \"../dao/getData\";\nimport color from \"../utils/color\";\nimport refreshNews from \"../api/RefreshNews\";\nimport data from \"../utils/data\";\nimport News from \"./News\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nHomeScreen = function HomeScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      news = _useState2[0],\n      setNews = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reloaded = _useState4[0],\n      setReloaded = _useState4[1];\n\n  useEffect(function () {\n    if (news == null) {\n      getNews();\n      getData('newsData').then(function (data) {\n        setNews(data);\n      });\n    }\n\n    setReloaded(false);\n  }, [reloaded]);\n\n  var handleReload = function handleReload() {\n    setReloaded(true);\n    refreshNews();\n    getData('newsData').then(function (data) {\n      setNews(data);\n      setReloaded(false);\n    });\n  };\n\n  if (news == null) {\n    return _jsx(ScrollView, {\n      style: styles.container,\n      children: _jsx(HomeTitle, {})\n    });\n  } else {\n    return _jsxs(ScrollView, {\n      style: styles.container,\n      onclick: handleReload,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: reloaded,\n        onRefresh: handleReload\n      }),\n      children: [_jsx(HomeTitle, {}), news.map(function (data, i) {\n        return _jsx(NewsCard, {\n          newsData: data\n        }, i);\n      })]\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100%',\n    width: '100%',\n    backgroundColor: color.background,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingBottom: 40\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["D:/React Native/NewsFeed/src/screens/Home.js"],"names":["React","useEffect","useState","getNews","HomeTitle","NewsCard","getData","color","refreshNews","data","News","HomeScreen","props","news","setNews","reloaded","setReloaded","then","handleReload","styles","container","map","i","StyleSheet","create","flex","height","width","backgroundColor","background","paddingLeft","paddingRight","paddingBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAGA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;AACA,OAAOC,WAAP;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;;;;AAIAC,UAAU,GAAG,oBAACC,KAAD,EAAW;AAEpB,kBAAwBV,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCZ,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,WAAjB;;AAGAf,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGY,IAAI,IAAI,IAAX,EAAgB;AACZV,MAAAA,OAAO;AACPG,MAAAA,OAAO,CAAC,UAAD,CAAP,CAAoBW,IAApB,CAAyB,UAAAR,IAAI,EAAI;AAC7BK,QAAAA,OAAO,CAACL,IAAD,CAAP;AACH,OAFD;AAGH;;AACDO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GARQ,EAQN,CAACD,QAAD,CARM,CAAT;;AAUA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAR,IAAAA,WAAW;AACXF,IAAAA,OAAO,CAAC,UAAD,CAAP,CAAoBW,IAApB,CAAyB,UAAAR,IAAI,EAAI;AAC7BK,MAAAA,OAAO,CAACL,IAAD,CAAP;AACAO,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAHD;AAKH,GARD;;AAUA,MAAGH,IAAI,IAAI,IAAX,EAAiB;AACb,WACI,KAAC,UAAD;AAAY,MAAA,KAAK,EAAEM,MAAM,CAACC,SAA1B;AAAA,gBACI,KAAC,SAAD;AADJ,MADJ;AAKH,GAND,MAMO;AACH,WACI,MAAC,UAAD;AAAY,MAAA,KAAK,EAAED,MAAM,CAACC,SAA1B;AAAqC,MAAA,OAAO,EAAEF,YAA9C;AACI,MAAA,cAAc,EAAE,KAAC,cAAD;AAAgB,QAAA,UAAU,EAAEH,QAA5B;AAAsC,QAAA,SAAS,EAAEG;AAAjD,QADpB;AAAA,iBAEI,KAAC,SAAD,KAFJ,EAIQL,IAAI,CAACQ,GAAL,CAAS,UAACZ,IAAD,EAAOa,CAAP,EAAa;AAClB,eAAO,KAAC,QAAD;AAAU,UAAA,QAAQ,EAAEb;AAApB,WAA+Ba,CAA/B,CAAP;AACH,OAFD,CAJR;AAAA,MADJ;AAWH;AAGJ,CA/CD;;AAiDA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,eAAe,EAAErB,KAAK,CAACsB,UAJhB;AAKPC,IAAAA,WAAW,EAAE,EALN;AAMPC,IAAAA,YAAY,EAAE,EANP;AAOPC,IAAAA,aAAa,EAAE;AAPR;AADkB,CAAlB,CAAf;AAYA,eAAerB,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { RefreshControl, ScrollView, StyleSheet } from 'react-native';\r\n\r\nimport getNews from '../api/GetNews';\r\nimport HomeTitle from '../components/HomeTitle';\r\nimport NewsCard from '../components/NewsCard';\r\nimport getData from '../dao/getData';\r\nimport color from '../utils/color';\r\nimport refreshNews from '../api/RefreshNews';\r\nimport data from '../utils/data';\r\nimport News from './News';\r\n\r\n\r\n\r\nHomeScreen = (props) => {\r\n\r\n    const [news, setNews] = useState(null);\r\n    const [reloaded, setReloaded] = useState(false);\r\n    \r\n\r\n    useEffect(() => {\r\n        if(news == null){\r\n            getNews();\r\n            getData('newsData').then(data => {\r\n                setNews(data);\r\n            })\r\n        }\r\n        setReloaded(false);\r\n    }, [reloaded])\r\n\r\n    const handleReload = () => {\r\n        setReloaded(true);\r\n        refreshNews();\r\n        getData('newsData').then(data => {\r\n            setNews(data);\r\n            setReloaded(false);\r\n        })\r\n        \r\n    }\r\n\r\n    if(news == null) {\r\n        return (\r\n            <ScrollView style={styles.container}>\r\n                <HomeTitle />\r\n            </ScrollView>\r\n        );\r\n    } else {\r\n        return (\r\n            <ScrollView style={styles.container} onclick={handleReload}\r\n                refreshControl={<RefreshControl refreshing={reloaded} onRefresh={handleReload}/>}>\r\n                <HomeTitle />\r\n                {\r\n                    news.map((data, i) => {\r\n                        return <NewsCard newsData={data} key={i} />\r\n                    })\r\n                }\r\n            </ScrollView>\r\n        );\r\n    }\r\n   \r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        height: '100%',\r\n        width: '100%',\r\n        backgroundColor: color.background,\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        paddingBottom: 40\r\n    }\r\n})\r\n\r\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}